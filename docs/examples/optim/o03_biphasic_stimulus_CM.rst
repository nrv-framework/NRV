
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/optim/o03_biphasic_stimulus_CM.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_optim_o03_biphasic_stimulus_CM.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_optim_o03_biphasic_stimulus_CM.py:


Understanding context modifiers: **biphasic_stimulus_CM**
=========================================================

This small example shows a way to use the built-in `~nrv.optim.optim_utils.biphasic_stimulus_CM`.

.. seealso::
    :doc:`users' guide <../../usersguide/optimization>` 

.. GENERATED FROM PYTHON SOURCE LINES 10-127

.. code-block:: Python

    import numpy as np
    import matplotlib.pyplot as plt
    import nrv

    # Generate a dummy static context
    t_sim=10
    l_ax = 10000
    ax = nrv.myelinated(y=0, z=0, L=l_ax)
    E1 = nrv.point_source_electrode(x=l_ax/2,y=0, z=100)
    dummy_stim = nrv.stimulus()

    extra_stim = nrv.stimulation("epineurium")
    extra_stim.add_electrode(E1, dummy_stim)
    ax.attach_extracellular_stimulation(extra_stim)
    static_context = ax.save(extracel_context=True)

    linestyles = ["-", "--", ":"]


    # set t_cathod as a variable
    test_stim_CM = nrv.biphasic_stimulus_CM(start=1, t_cathod="0", s_cathod=100, s_ratio=0.2, t_inter=0.1)


    # For each of this points we are going to generate the axon
    # from static context with the context modifier
    # and then plot the stimulus

    X = np.array([
        [.5],
        [1],
        [2],
    ])

    fig1, axs1 = plt.subplots(2,2)
    axs1[0,0].set_title("X = [$t_{cathod}$]")
    for i, x in enumerate(X):
        ax = test_stim_CM(x, static_context)
        stim = ax.extra_stim.stimuli[0]
        del ax
        stim.plot(axs1[0,0], linestyle=linestyles[i], label=f"x={x}")

    axs1[0,0].grid()
    axs1[0,0].legend()
    axs1[0,0].set_xlabel('time (ms)')
    axs1[0,0].set_ylabel('amplitude (µA)')


    # t_strat
    test_stim_CM.set_parameters(start="0", t_cathod=1, s_cathod=100, s_ratio=0.2, t_inter=0.1)

    X = np.array([
        [.5],
        [1],
        [2],
    ])


    axs1[0, 1].set_title("X := [$t_{start}$]")
    for i, x in enumerate(X):
        ax = test_stim_CM(x, static_context)
        stim = ax.extra_stim.stimuli[0]
        del ax
        plt.figure(1)
        stim.plot(axs1[0, 1], linestyle=linestyles[i], label=f"x={x}")

    axs1[0, 1].grid()
    axs1[0, 1].legend()
    axs1[0, 1].set_xlabel('time (ms)')
    axs1[0, 1].set_ylabel('amplitude (µA)')


    # s_cathod
    test_stim_CM.set_parameters(start=1, t_cathod=1, s_cathod="0", s_ratio=0.2, t_inter=0.1)

    X = np.array([
        [10],
        [50],
        [100],
    ])

    axs1[1, 0].set_title("X := [$s_{cathod}$]")
    for i, x in enumerate(X):
        # we get the stimulus of the axon generated from the context modifier
        ax = test_stim_CM(x, static_context)
        stim = ax.extra_stim.stimuli[0]
        del ax
        stim.plot(axs1[1, 0], linestyle=linestyles[i], label=f"x={x}")

    axs1[1, 0].grid()
    axs1[1, 0].legend()
    axs1[1, 0].set_xlabel('time (ms)')
    axs1[1, 0].set_ylabel('amplitude (µA)')

    # s_cathod
    test_stim_CM.set_parameters(start=1, t_cathod=1, s_cathod=100, s_ratio="0", t_inter=0.1)

    X = np.array([
        [.1],
        [.2],
        [.5],
    ])


    axs1[1, 1].set_title("X := [$s_{ratio}$]")
    for i, x in enumerate(X):
        # we get the stimulus of the axon generated from the context modifier
        ax = test_stim_CM(x, static_context)
        stim = ax.extra_stim.stimuli[0]
        del ax
        stim.plot(axs1[1, 1], linestyle=linestyles[i], label=f"x={x}")

    axs1[1, 1].grid()
    axs1[1, 1].legend()
    axs1[1, 1].set_xlabel('time (ms)')
    axs1[1, 1].set_ylabel('amplitude (µA)')
    fig1.tight_layout()




.. image-sg:: /examples/optim/images/sphx_glr_o03_biphasic_stimulus_CM_001.png
   :alt: X = [$t_{cathod}$], X := [$t_{start}$], X := [$s_{cathod}$], X := [$s_{ratio}$]
   :srcset: /examples/optim/images/sphx_glr_o03_biphasic_stimulus_CM_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 128-136

.. code-block:: Python

    test_stim_CM.set_parameters(start="3", t_cathod="2", s_cathod="0", s_ratio="1", t_inter="4")

    X = np.array([
        [100, .1, .5, 0.5, 0.],
        [200, .2, 1, 1, 0.2],
        [500, .5, 2, 2, 0.4],
    ])








.. GENERATED FROM PYTHON SOURCE LINES 137-153

.. code-block:: Python

    fig2, ax2 = plt.subplots()
    ax2.set_title("X = [$s_{cathod}$, $s_{ratio}$, $t_{cathod}$, $t_{cathod}$, $t_{inter}$]")
    for i, x in enumerate(X):
        # we get the stimulus of the axon generated from the context modifier
        ax = test_stim_CM(x, static_context)
        stim = ax.extra_stim.stimuli[0]
        del ax

        stim.plot(ax2, linestyle=linestyles[i], label=f"x={x.tolist()}")
        # ax1.plot(t_shift+x[::2], x[1::2], 'ok')

    ax2.grid()
    ax2.legend()
    ax2.set_xlabel('time (ms)')
    ax2.set_ylabel('amplitude (µA)')

    plt.show()


.. image-sg:: /examples/optim/images/sphx_glr_o03_biphasic_stimulus_CM_002.png
   :alt: X = [$s_{cathod}$, $s_{ratio}$, $t_{cathod}$, $t_{cathod}$, $t_{inter}$]
   :srcset: /examples/optim/images/sphx_glr_o03_biphasic_stimulus_CM_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.304 seconds)


.. _sphx_glr_download_examples_optim_o03_biphasic_stimulus_CM.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: o03_biphasic_stimulus_CM.ipynb <o03_biphasic_stimulus_CM.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: o03_biphasic_stimulus_CM.py <o03_biphasic_stimulus_CM.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: o03_biphasic_stimulus_CM.zip <o03_biphasic_stimulus_CM.zip>`
