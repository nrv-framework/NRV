
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/generic/01_propagation_Vmem.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_generic_01_propagation_Vmem.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_generic_01_propagation_Vmem.py:


Propagation of spike along the axon
===================================

This code performs basic simulation showing the propagation of action potential along axons for both unmyelinated and myelinated (saltatory conduction) fibers.

.. GENERATED FROM PYTHON SOURCE LINES 7-55



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/generic/images/sphx_glr_01_propagation_Vmem_001.png
         :alt: propagation along myelinated fiber
         :srcset: /examples/generic/images/sphx_glr_01_propagation_Vmem_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/generic/images/sphx_glr_01_propagation_Vmem_002.png
         :alt: propagation along unmyelinated fiber
         :srcset: /examples/generic/images/sphx_glr_01_propagation_Vmem_002.png
         :class: sphx-glr-multi-img





.. code-block:: Python


    import sys
    sys.path.append("../../")

    import nrv
    import matplotlib.pyplot as plt

    if __name__ == '__main__':

        # axon def
        y = 0						# axon y position, in [um]
        z = 0						# axon z position, in [um]
        d = 6						# axon diameter, in [um]
        L = 5000					# axon length, along x axis, in [um]
        axon1 = nrv.myelinated(y,z,d,L,rec='all')

        t_start = 0.1
        duration = 0.5
        amplitude = 0.35

        amplitude = 0.195
        axon2 = nrv.unmyelinated(y,z,d,L,dt=0.001,Nrec=2000)
        axon1.insert_I_Clamp(0, t_start, duration, amplitude)

        amplitude = 10
        axon2.insert_I_Clamp(0, t_start, duration, amplitude)


        results = axon1.simulate(t_sim=4.5)
        del axon1

        fig, ax = plt.subplots(1)
        cbar = results.colormap_plot(ax, "V_mem")
        ax.set_xlabel('Time (ms)')
        ax.set_ylabel('x-position (µm)')
        ax.set_title('propagation along myelinated fiber')
        cbar.set_label(r'Membrane Voltage $V_m$ (mV)')

        results = axon2.simulate(t_sim=4.5)
        #nrv.rasterize(results,'V_mem')
        del axon2

        fig, ax = plt.subplots(1)
        cbar = results.colormap_plot(ax, "V_mem")
        ax.set_xlabel('Time (ms)')
        ax.set_ylabel('x-position (µm)')
        ax.set_title('propagation along unmyelinated fiber')
        cbar.set_label(r'Membrane Voltage $V_m$ (mV)')
        plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.865 seconds)


.. _sphx_glr_download_examples_generic_01_propagation_Vmem.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01_propagation_Vmem.ipynb <01_propagation_Vmem.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01_propagation_Vmem.py <01_propagation_Vmem.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 01_propagation_Vmem.zip <01_propagation_Vmem.zip>`
